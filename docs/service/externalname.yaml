# 전체 구조는 다음과 같다.
# NodePort (port: random) <-- whoami pod --> ExternalName --> NodePort (port: 30000) --> redis pod

# 사실 위 구조 대신
# NodePort <-- whoami pod --> ClusterIP --> redis pod
# 으로 구성하면 훨씬 간단하지만, 어디까지나 externalName 을 테스트하기 위한 예제이다보니, 조금 복잡해졌다.

---
# External name of redis
apiVersion: v1
kind: Service
metadata:
  # 'external-redis' 라는 이름을 특정 도메인과 맵핑시킨다.
  name: external-redis
spec:
  type: ExternalName
  # (Change me)
  externalName: '6.tcp.ngrok.io'

---
# NodePort for redis
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: NodePort
  ports:
    - port: 6379
      nodePort: 30000
      protocol: TCP
  selector:
    type: db
    service: redis

---
# Redis pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      type: db
      service: redis
  template:
    metadata:
      labels:
        type: db
        service: redis
    spec:
      containers:
        - name: redis
          image: redis
          ports:
            - containerPort: 6379
              protocol: TCP

---
# Redis 를 사용하는 어플리케이션 pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami
spec:
  selector:
    matchLabels:
      type: app
      service: whoami
  template:
    metadata:
      labels:
        type: app
        service: whoami
    spec:
      containers:
        - name: whoami
          image: subicura/whoami-redis:1
          env:
            - name: REDIS_HOST
              # Service 의 metadata.name 를 넣는다
              value: "external-redis"
            - name: REDIS_PORT
              value: "15211"

---
# Redis 를 사용하는 application 의 Service
apiVersion: v1
kind: Service
metadata:
  name: whoami
spec:
  type: NodePort
  ports:
    - port: 4567
      protocol: TCP
  selector:
    type: app
    service: whoami